plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'groovy'
}

group = 'net.causw'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 17
targetCompatibility = 17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

jar {
    enabled = false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    /*
    implementation('org.springframework.boot:spring-boot-starter-web'){
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-jetty')

     */
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'org.jsoup:jsoup:1.18.1'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    runtimeOnly 'com.mysql:mysql-connector-j'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'


    // Spock test
    testImplementation "org.spockframework:spock-core:1.2-groovy-2.4"
    testImplementation "org.spockframework:spock-spring:1.2-groovy-2.4"

    testImplementation "org.powermock:powermock-api-mockito2:2.0.2"

    // JUnit5
    testImplementation("org.junit.platform:junit-platform-launcher:1.5.2")
    testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")

    // Discord LogBack
    implementation 'com.github.napstr:logback-discord-appender:1.0.0'

    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    // h2 database(테스트용)
    runtimeOnly 'com.h2database:h2'

    // monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // Apache POI for Excel file generation
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.batch:spring-batch-core'

    // Retry 관련
    // https://mvnrepository.com/artifact/org.springframework.retry/spring-retry
    implementation 'org.springframework.retry:spring-retry:1.0.3.RELEASE'
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        events = ["passed", "skipped", "failed"]
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
        }
    }
}
