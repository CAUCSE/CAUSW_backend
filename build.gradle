plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'net.causw'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

jar {
    enabled = false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation('org.springframework.boot:spring-boot-starter-web'){
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-jetty')
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    runtimeOnly 'mysql:mysql-connector-java'
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.6.15.Final'

    // Swagger
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    // Discord LogBack
    implementation 'com.github.napstr:logback-discord-appender:1.0.0'

    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Junit5
    testImplementation("org.junit.platform:junit-platform-launcher:1.5.2")
    testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform()
    // JUnit 테스트를 실행하고 결과를 XML 파일로 저장합니다.
    reports {
        junitXml.enabled = true
        // 결과 파일의 경로를 지정합니다.
        junitXml.destination = file("$buildDir/test-results/test")
    }
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }

    // 리포트 작성 시 특정 경로만 포함 (비즈니스 로직만)
    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, includes: [
                            '**/application/**'
                    ])
                })
        )
    }
}