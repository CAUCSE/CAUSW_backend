package net.causw.global.exception;

import net.causw.global.constant.HttpStatusCodes;

import lombok.Getter;

@Getter
public enum ErrorCode {
	/**
	 * 400 Bad Request
	 */
	ROW_DOES_NOT_EXIST(4000, HttpStatusCodes.BAD_REQUEST),
	ROW_ALREADY_EXIST(4001, HttpStatusCodes.BAD_REQUEST),
	INVALID_PARAMETER(4002, HttpStatusCodes.BAD_REQUEST),
	INVALID_USER_DATA_REQUEST(4003, HttpStatusCodes.BAD_REQUEST),
	TARGET_DELETED(4004, HttpStatusCodes.BAD_REQUEST),
	INVALID_HTTP_METHOD(4005, HttpStatusCodes.BAD_REQUEST),
	APPLY_NOT_EXIST(4006, HttpStatusCodes.BAD_REQUEST),
	CANNOT_PERFORMED(4007, HttpStatusCodes.BAD_REQUEST),
	AWAITING_STATUS(4008, HttpStatusCodes.BAD_REQUEST),
	INVALID_STUDENT_ID(4009, HttpStatusCodes.BAD_REQUEST),
	TIME_NOT_PASSED(4010, HttpStatusCodes.BAD_REQUEST),
	NO_APPLICATION(4011, HttpStatusCodes.BAD_REQUEST),
	NEED_SIGN_IN(4012, HttpStatusCodes.BAD_REQUEST),
	INVALID_REQUEST_ROLE(4013, HttpStatusCodes.BAD_REQUEST),
	INVALID_REQUEST_USER_STATE(4014, HttpStatusCodes.BAD_REQUEST),
	INVALID_FILE_EXTENSION(4015, HttpStatusCodes.BAD_REQUEST),
	INVALID_EXPIRE_DATE(4016, HttpStatusCodes.BAD_REQUEST),
	FLAG_NOT_AVAILABLE(4017, HttpStatusCodes.BAD_REQUEST),
	LOCKER_ACTION_ERROR(4018, HttpStatusCodes.BAD_REQUEST),
	VALIDATION_FAILED(4019, HttpStatusCodes.BAD_REQUEST),
	INVALID_ACADEMIC_RECORD_REQUEST_STATUS(4020, HttpStatusCodes.BAD_REQUEST),
	NOT_ALLOWED_TO_REPLY_FORM(4021, HttpStatusCodes.BAD_REQUEST),
	INVALID_BOARD_CATEGORY(4022, HttpStatusCodes.BAD_REQUEST),
	INVALID_PERIOD(4023, HttpStatusCodes.BAD_REQUEST),

	/**
	 * 401 Unauthorized
	 */
	API_NOT_ACCESSIBLE(4100, HttpStatusCodes.UNAUTHORIZED),
	INVALID_SIGNIN(4101, HttpStatusCodes.UNAUTHORIZED),
	BLOCKED_USER(4102, HttpStatusCodes.UNAUTHORIZED),
	INACTIVE_USER(4103, HttpStatusCodes.UNAUTHORIZED),
	AWAITING_USER(4104, HttpStatusCodes.UNAUTHORIZED),
	INVALID_JWT(4105, HttpStatusCodes.UNAUTHORIZED),
	ASSIGN_ROLE_NOT_ALLOWED(4106, HttpStatusCodes.UNAUTHORIZED),
	API_NOT_ALLOWED(4107, HttpStatusCodes.UNAUTHORIZED),
	NOT_MEMBER(4108, HttpStatusCodes.UNAUTHORIZED),
	REJECT_USER(4109, HttpStatusCodes.UNAUTHORIZED),
	EXPIRED_JWT(4110, HttpStatusCodes.UNAUTHORIZED),
	DELETED_USER(4111, HttpStatusCodes.UNAUTHORIZED),

	/**
	 * 403 Forbidden
	 */
	BLOCKED_USERS_CONTENT(4030, HttpStatusCodes.FORBIDDEN),

	/**
	 * 500 Internal Server Error
	 */
	INTERNAL_SERVER(5000, HttpStatusCodes.INTERNAL_SERVER_ERROR),
	FILE_UPLOAD_FAIL(5001, HttpStatusCodes.INTERNAL_SERVER_ERROR),
	FILE_DELETE_FAIL(5002, HttpStatusCodes.INTERNAL_SERVER_ERROR),
	ROW_IS_DUPLICATED(5003, HttpStatusCodes.INTERNAL_SERVER_ERROR),

	/**
	 * 503 Service Unavailable Error
	 */
	SERVICE_UNAVAILABLE(5030, HttpStatusCodes.SERVICE_UNAVAILABLE);

	private final int code;
	private final int httpStatusCode;

	ErrorCode(int code, int httpStatusCode) {
		this.code = code;
		this.httpStatusCode = httpStatusCode;
	}
}